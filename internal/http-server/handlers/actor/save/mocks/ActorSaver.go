// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ActorSaver is an autogenerated mock type for the ActorSaver type
type ActorSaver struct {
	mock.Mock
}

// SaveActor provides a mock function with given fields: name, gender, birthdate
func (_m *ActorSaver) SaveActor(name string, gender string, birthdate string) (int, error) {
	ret := _m.Called(name, gender, birthdate)

	if len(ret) == 0 {
		panic("no return value specified for SaveActor")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string) (int, error)); ok {
		return rf(name, gender, birthdate)
	}
	if rf, ok := ret.Get(0).(func(string, string, string) int); ok {
		r0 = rf(name, gender, birthdate)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(name, gender, birthdate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewActorSaver creates a new instance of ActorSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewActorSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *ActorSaver {
	mock := &ActorSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
